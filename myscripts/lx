#!/usr/bin/env ruby
# This script is a wrapper for Xunlei-lixian python script. 
# Of cause, you should clone xunlei-lixian source code to /usr/local/bin.

require "FileUtils"
include FileUtils

LX_HOME = "/usr/local/bin/xunlei-lixian"

def get_ids
  ids = []
  `my lx list`.each_line do |l|
    ids << l.split(" ").first
  end
  ids
end

def preprocess(arr)
  argv = []
  arr.each do |arg|
    case arg
    when "l"
      argv << "list"
    when "d"
      argv << "download"
    when "h"
      argv << "help"
    when "del"
      argv << "delete"
    when "a"
      argv << "add"
    when "first"
    when "f"
      argv << "download"
      argv << "#0"
    when "last"
    when "la"
      ids = get_ids
      argv << "download"
      argv << ids.last
    when /^f\d+$/
      fid = arg.split("f").last.to_i
      argv << "download"
      argv << "#0-#{fid-1}"
    when "dfirst"
    when "df"
      ids = get_ids
      argv << "delete"
      argv << ids.first
    when "dlast"
    when "dla"
      ids = get_ids
      argv << "download"
      argv << ids.last
    when /^del\d+$/
      argv << "delete"
      ids = get_ids
      files_to_delete = arg.split("del").last.to_i
      if files_to_delete >= ids.count
        argv << ids
      else
        argv << ids[0...files_to_delete]
      end
      argv.flatten
    else
      argv << arg
    end
  end
  argv
end

argv = preprocess(ARGV)

if ["update", "--update", "-u", "u"].index(argv[0])
  cd LX_HOME do
    system("git pull")
  end
  exit(0)
elsif argv.last == "help" || argv.size == 0
  output = `"#{LX_HOME}/lixian_cli.py"`
  output += <<END

More commands
 h		same to help
 l		same to list
 a		same to add
 d		same to download
 o		same to open
 f		same to first
 u		upgrade lixian app (or use update, --update, -u)
 la		same to last
 fN		download first N tasks
 del		same to delete
 delN		delete first N tasks
 dnd		download task and delete task after download *
 hash		calculate hash for torrent files
 open		open Xunlei Lixian website
 first		download the first task
 last		download the last task
 dfirst		delete the first task (or df)
 dlast		delete the last task (or dla)

More options for download:
 --clean	delete task after download *

* CAUTION: dnd or --clean option has the risk of accidentally
           delete un-downloaded lixian task!
END
  puts output
elsif (argv.first == "download")
  download_dir = "/Volumes/Data/Downloads/"
  unless File.exists?(download_dir)
    download_dir = pwd
  end

  cd download_dir do 
    if argv.last == "--clean"
      argv.pop;argv.shift
      system("#{LX_HOME}/lixian_cli.py download #{argv.join(" ")}")
      system("#{LX_HOME}/lixian_cli.py delete #{argv.join(" ")}")
    else
      argv.shift
      system("#{LX_HOME}/lixian_cli.py download #{argv.join(" ")}")
    end
  end
elsif (argv.first == "dnd" && argv.size > 1)
  argv.shift
  system("#{LX_HOME}/lixian_cli.py download #{argv.join(" ")}")
  system("#{LX_HOME}/lixian_cli.py delete #{argv.join(" ")}")
elsif (argv.first == "hash" && argv.size > 1)
  argv.shift
  system("#{LX_HOME}/lixian_hash.py --info-hash #{argv.join(" ")}")
elsif (argv.first == "open" || argv.first == "o")
  system("open http://lixian.vip.xunlei.com")
else
  system("#{LX_HOME}/lixian_cli.py #{argv.join(" ")}")
end
